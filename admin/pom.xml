<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>rpc_test</artifactId>
        <groupId>com.github.chenmingq.rpc</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.chenmingq.rpc.admin</groupId>
    <artifactId>admin</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <mavenen.compiler.target>8</mavenen.compiler.target>
        <spring-boot.verison>2.4.1</spring-boot.verison>
        <admin.main.class>com.github.chenmingq.rpc.admin.App</admin.main.class>
        <webapp.source.working.directory>${basedir}/src/main/resources/rcp_test_admin</webapp.source.working.directory>
        <webapp.source.working.out.directory>${basedir}/src/main/resources/rcp_test_admin/dist</webapp.source.working.out.directory>
        <webapp.working.build.directory>${basedir}/src/main/resources/webapp</webapp.working.build.directory>
    </properties>

    <profiles>
        <profile>
            <id>os</id>
            <properties>
                <npm>npm</npm>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.verison}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-thymeleaf</artifactId>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>com.github.chenmingq.rpc.common</groupId>
            <artifactId>common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>


    <build>

        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <!--打包忽略的目录文件夹-->
                <excludes>
                    <exclude>**/rcp_test_admin/</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <!--clean 目录-->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${webapp.working.build.directory}</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${webapp.source.working.out.directory}</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--执行npm命令-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>

                    <!-- npm install -->
                    <execution>
                        <id>exec-npm-install</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${npm}</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                            <workingDirectory>${webapp.source.working.directory}</workingDirectory>
                        </configuration>
                    </execution>

                    <!-- npm run build -->
                    <execution>
                        <id>exec-npm-run-build</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${npm}</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build:prod</argument>
                            </arguments>
                            <workingDirectory>${webapp.source.working.directory}</workingDirectory>
                        </configuration>
                    </execution>

                </executions>
            </plugin>


            <!--copy文件到指定目录下 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.plugin.version}</version>
                <executions>

                    <execution>
                        <id>copy-spring-boot-webapp</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>utf-8</encoding>
                            <outputDirectory>${webapp.working.build.directory}/dist</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${webapp.source.working.out.directory}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/webapp</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${webapp.working.build.directory}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${admin.main.class}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>

        </plugins>
    </build>

</project>