// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RpcTest.proto

package com.github.chenmingq.rpc.common.transport.protocol;

public final class RpcTestProto {
  private RpcTestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ReqConnectServerMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReqConnectServerMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 本机暴露的端口
     * </pre>
     *
     * <code>int32 port = 1;</code>
     */
    int getPort();

    /**
     * <pre>
     * 本机暴露的节点id
     * </pre>
     *
     * <code>int32 node = 2;</code>
     */
    int getNode();
  }
  /**
   * <pre>
   * 连接服务
   * </pre>
   *
   * Protobuf type {@code ReqConnectServerMessage}
   */
  public  static final class ReqConnectServerMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReqConnectServerMessage)
      ReqConnectServerMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReqConnectServerMessage.newBuilder() to construct.
    private ReqConnectServerMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReqConnectServerMessage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReqConnectServerMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReqConnectServerMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              port_ = input.readInt32();
              break;
            }
            case 16: {

              node_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ReqConnectServerMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ReqConnectServerMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.class, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private int port_;
    /**
     * <pre>
     * 本机暴露的端口
     * </pre>
     *
     * <code>int32 port = 1;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int NODE_FIELD_NUMBER = 2;
    private int node_;
    /**
     * <pre>
     * 本机暴露的节点id
     * </pre>
     *
     * <code>int32 node = 2;</code>
     */
    public int getNode() {
      return node_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != 0) {
        output.writeInt32(1, port_);
      }
      if (node_ != 0) {
        output.writeInt32(2, node_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, port_);
      }
      if (node_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, node_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage)) {
        return super.equals(obj);
      }
      com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage other = (com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage) obj;

      if (getPort()
          != other.getPort()) return false;
      if (getNode()
          != other.getNode()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 连接服务
     * </pre>
     *
     * Protobuf type {@code ReqConnectServerMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReqConnectServerMessage)
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ReqConnectServerMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ReqConnectServerMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.class, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.Builder.class);
      }

      // Construct using com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        port_ = 0;

        node_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ReqConnectServerMessage_descriptor;
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage getDefaultInstanceForType() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage build() {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage buildPartial() {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage result = new com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage(this);
        result.port_ = port_;
        result.node_ = node_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage) {
          return mergeFrom((com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage other) {
        if (other == com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage.getDefaultInstance()) return this;
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.getNode() != 0) {
          setNode(other.getNode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * 本机暴露的端口
       * </pre>
       *
       * <code>int32 port = 1;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * 本机暴露的端口
       * </pre>
       *
       * <code>int32 port = 1;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 本机暴露的端口
       * </pre>
       *
       * <code>int32 port = 1;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private int node_ ;
      /**
       * <pre>
       * 本机暴露的节点id
       * </pre>
       *
       * <code>int32 node = 2;</code>
       */
      public int getNode() {
        return node_;
      }
      /**
       * <pre>
       * 本机暴露的节点id
       * </pre>
       *
       * <code>int32 node = 2;</code>
       */
      public Builder setNode(int value) {
        
        node_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 本机暴露的节点id
       * </pre>
       *
       * <code>int32 node = 2;</code>
       */
      public Builder clearNode() {
        
        node_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ReqConnectServerMessage)
    }

    // @@protoc_insertion_point(class_scope:ReqConnectServerMessage)
    private static final com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage();
    }

    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReqConnectServerMessage>
        PARSER = new com.google.protobuf.AbstractParser<ReqConnectServerMessage>() {
      @java.lang.Override
      public ReqConnectServerMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReqConnectServerMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReqConnectServerMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReqConnectServerMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ReqConnectServerMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResProviderAddressMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ResProviderAddressMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    java.util.List<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean> 
        getAddrListList();
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean getAddrList(int index);
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    int getAddrListCount();
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    java.util.List<? extends com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder> 
        getAddrListOrBuilderList();
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder getAddrListOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 返回注册中心的提供者地址列表
   * </pre>
   *
   * Protobuf type {@code ResProviderAddressMessage}
   */
  public  static final class ResProviderAddressMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ResProviderAddressMessage)
      ResProviderAddressMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ResProviderAddressMessage.newBuilder() to construct.
    private ResProviderAddressMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResProviderAddressMessage() {
      addrList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ResProviderAddressMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ResProviderAddressMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                addrList_ = new java.util.ArrayList<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean>();
                mutable_bitField0_ |= 0x00000001;
              }
              addrList_.add(
                  input.readMessage(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          addrList_ = java.util.Collections.unmodifiableList(addrList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ResProviderAddressMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ResProviderAddressMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.class, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.Builder.class);
    }

    public static final int ADDRLIST_FIELD_NUMBER = 1;
    private java.util.List<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean> addrList_;
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    public java.util.List<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean> getAddrListList() {
      return addrList_;
    }
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    public java.util.List<? extends com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder> 
        getAddrListOrBuilderList() {
      return addrList_;
    }
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    public int getAddrListCount() {
      return addrList_.size();
    }
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean getAddrList(int index) {
      return addrList_.get(index);
    }
    /**
     * <pre>
     * 地址列表
     * </pre>
     *
     * <code>repeated .AddressBean addrList = 1;</code>
     */
    public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder getAddrListOrBuilder(
        int index) {
      return addrList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < addrList_.size(); i++) {
        output.writeMessage(1, addrList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < addrList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, addrList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage)) {
        return super.equals(obj);
      }
      com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage other = (com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage) obj;

      if (!getAddrListList()
          .equals(other.getAddrListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAddrListCount() > 0) {
        hash = (37 * hash) + ADDRLIST_FIELD_NUMBER;
        hash = (53 * hash) + getAddrListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 返回注册中心的提供者地址列表
     * </pre>
     *
     * Protobuf type {@code ResProviderAddressMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ResProviderAddressMessage)
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ResProviderAddressMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ResProviderAddressMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.class, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.Builder.class);
      }

      // Construct using com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAddrListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (addrListBuilder_ == null) {
          addrList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          addrListBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_ResProviderAddressMessage_descriptor;
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage getDefaultInstanceForType() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage build() {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage buildPartial() {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage result = new com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage(this);
        int from_bitField0_ = bitField0_;
        if (addrListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            addrList_ = java.util.Collections.unmodifiableList(addrList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.addrList_ = addrList_;
        } else {
          result.addrList_ = addrListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage) {
          return mergeFrom((com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage other) {
        if (other == com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage.getDefaultInstance()) return this;
        if (addrListBuilder_ == null) {
          if (!other.addrList_.isEmpty()) {
            if (addrList_.isEmpty()) {
              addrList_ = other.addrList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAddrListIsMutable();
              addrList_.addAll(other.addrList_);
            }
            onChanged();
          }
        } else {
          if (!other.addrList_.isEmpty()) {
            if (addrListBuilder_.isEmpty()) {
              addrListBuilder_.dispose();
              addrListBuilder_ = null;
              addrList_ = other.addrList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              addrListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAddrListFieldBuilder() : null;
            } else {
              addrListBuilder_.addAllMessages(other.addrList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean> addrList_ =
        java.util.Collections.emptyList();
      private void ensureAddrListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          addrList_ = new java.util.ArrayList<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean>(addrList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder> addrListBuilder_;

      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public java.util.List<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean> getAddrListList() {
        if (addrListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(addrList_);
        } else {
          return addrListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public int getAddrListCount() {
        if (addrListBuilder_ == null) {
          return addrList_.size();
        } else {
          return addrListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean getAddrList(int index) {
        if (addrListBuilder_ == null) {
          return addrList_.get(index);
        } else {
          return addrListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder setAddrList(
          int index, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean value) {
        if (addrListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddrListIsMutable();
          addrList_.set(index, value);
          onChanged();
        } else {
          addrListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder setAddrList(
          int index, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder builderForValue) {
        if (addrListBuilder_ == null) {
          ensureAddrListIsMutable();
          addrList_.set(index, builderForValue.build());
          onChanged();
        } else {
          addrListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder addAddrList(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean value) {
        if (addrListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddrListIsMutable();
          addrList_.add(value);
          onChanged();
        } else {
          addrListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder addAddrList(
          int index, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean value) {
        if (addrListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddrListIsMutable();
          addrList_.add(index, value);
          onChanged();
        } else {
          addrListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder addAddrList(
          com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder builderForValue) {
        if (addrListBuilder_ == null) {
          ensureAddrListIsMutable();
          addrList_.add(builderForValue.build());
          onChanged();
        } else {
          addrListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder addAddrList(
          int index, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder builderForValue) {
        if (addrListBuilder_ == null) {
          ensureAddrListIsMutable();
          addrList_.add(index, builderForValue.build());
          onChanged();
        } else {
          addrListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder addAllAddrList(
          java.lang.Iterable<? extends com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean> values) {
        if (addrListBuilder_ == null) {
          ensureAddrListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, addrList_);
          onChanged();
        } else {
          addrListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder clearAddrList() {
        if (addrListBuilder_ == null) {
          addrList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          addrListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public Builder removeAddrList(int index) {
        if (addrListBuilder_ == null) {
          ensureAddrListIsMutable();
          addrList_.remove(index);
          onChanged();
        } else {
          addrListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder getAddrListBuilder(
          int index) {
        return getAddrListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder getAddrListOrBuilder(
          int index) {
        if (addrListBuilder_ == null) {
          return addrList_.get(index);  } else {
          return addrListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public java.util.List<? extends com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder> 
           getAddrListOrBuilderList() {
        if (addrListBuilder_ != null) {
          return addrListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(addrList_);
        }
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder addAddrListBuilder() {
        return getAddrListFieldBuilder().addBuilder(
            com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.getDefaultInstance());
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder addAddrListBuilder(
          int index) {
        return getAddrListFieldBuilder().addBuilder(
            index, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.getDefaultInstance());
      }
      /**
       * <pre>
       * 地址列表
       * </pre>
       *
       * <code>repeated .AddressBean addrList = 1;</code>
       */
      public java.util.List<com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder> 
           getAddrListBuilderList() {
        return getAddrListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder> 
          getAddrListFieldBuilder() {
        if (addrListBuilder_ == null) {
          addrListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder>(
                  addrList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          addrList_ = null;
        }
        return addrListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ResProviderAddressMessage)
    }

    // @@protoc_insertion_point(class_scope:ResProviderAddressMessage)
    private static final com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage();
    }

    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResProviderAddressMessage>
        PARSER = new com.google.protobuf.AbstractParser<ResProviderAddressMessage>() {
      @java.lang.Override
      public ResProviderAddressMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResProviderAddressMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResProviderAddressMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResProviderAddressMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.ResProviderAddressMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddressBeanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AddressBean)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ip
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    java.lang.String getIp();
    /**
     * <pre>
     * ip
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <pre>
     * 端口
     * </pre>
     *
     * <code>int32 port = 2;</code>
     */
    int getPort();

    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>int32 node = 3;</code>
     */
    int getNode();
  }
  /**
   * <pre>
   * 地址信息
   * </pre>
   *
   * Protobuf type {@code AddressBean}
   */
  public  static final class AddressBean extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AddressBean)
      AddressBeanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AddressBean.newBuilder() to construct.
    private AddressBean(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddressBean() {
      ip_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AddressBean();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AddressBean(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 16: {

              port_ = input.readInt32();
              break;
            }
            case 24: {

              node_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_AddressBean_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_AddressBean_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.class, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder.class);
    }

    public static final int IP_FIELD_NUMBER = 1;
    private volatile java.lang.Object ip_;
    /**
     * <pre>
     * ip
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ip
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <pre>
     * 端口
     * </pre>
     *
     * <code>int32 port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int NODE_FIELD_NUMBER = 3;
    private int node_;
    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>int32 node = 3;</code>
     */
    public int getNode() {
      return node_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ip_);
      }
      if (port_ != 0) {
        output.writeInt32(2, port_);
      }
      if (node_ != 0) {
        output.writeInt32(3, node_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ip_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, port_);
      }
      if (node_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, node_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean)) {
        return super.equals(obj);
      }
      com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean other = (com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean) obj;

      if (!getIp()
          .equals(other.getIp())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (getNode()
          != other.getNode()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 地址信息
     * </pre>
     *
     * Protobuf type {@code AddressBean}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AddressBean)
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBeanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_AddressBean_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_AddressBean_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.class, com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.Builder.class);
      }

      // Construct using com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ip_ = "";

        port_ = 0;

        node_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.internal_static_AddressBean_descriptor;
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean getDefaultInstanceForType() {
        return com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean build() {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean buildPartial() {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean result = new com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean(this);
        result.ip_ = ip_;
        result.port_ = port_;
        result.node_ = node_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean) {
          return mergeFrom((com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean other) {
        if (other == com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean.getDefaultInstance()) return this;
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.getNode() != 0) {
          setNode(other.getNode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <pre>
       * ip
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ip
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ip
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ip
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ip
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * 端口
       * </pre>
       *
       * <code>int32 port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * 端口
       * </pre>
       *
       * <code>int32 port = 2;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 端口
       * </pre>
       *
       * <code>int32 port = 2;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private int node_ ;
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>int32 node = 3;</code>
       */
      public int getNode() {
        return node_;
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>int32 node = 3;</code>
       */
      public Builder setNode(int value) {
        
        node_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>int32 node = 3;</code>
       */
      public Builder clearNode() {
        
        node_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AddressBean)
    }

    // @@protoc_insertion_point(class_scope:AddressBean)
    private static final com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean();
    }

    public static com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddressBean>
        PARSER = new com.google.protobuf.AbstractParser<AddressBean>() {
      @java.lang.Override
      public AddressBean parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddressBean(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AddressBean> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddressBean> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.chenmingq.rpc.common.transport.protocol.RpcTestProto.AddressBean getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReqConnectServerMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReqConnectServerMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ResProviderAddressMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ResProviderAddressMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AddressBean_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AddressBean_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rRpcTest.proto\"5\n\027ReqConnectServerMessa" +
      "ge\022\014\n\004port\030\001 \001(\005\022\014\n\004node\030\002 \001(\005\";\n\031ResPro" +
      "viderAddressMessage\022\036\n\010addrList\030\001 \003(\0132\014." +
      "AddressBean\"5\n\013AddressBean\022\n\n\002ip\030\001 \001(\t\022\014" +
      "\n\004port\030\002 \001(\005\022\014\n\004node\030\003 \001(\005BB\n2com.github" +
      ".chenmingq.rpc.common.transport.protocol" +
      "B\014RpcTestProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ReqConnectServerMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ReqConnectServerMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReqConnectServerMessage_descriptor,
        new java.lang.String[] { "Port", "Node", });
    internal_static_ResProviderAddressMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ResProviderAddressMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ResProviderAddressMessage_descriptor,
        new java.lang.String[] { "AddrList", });
    internal_static_AddressBean_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_AddressBean_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AddressBean_descriptor,
        new java.lang.String[] { "Ip", "Port", "Node", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
